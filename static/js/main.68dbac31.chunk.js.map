{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCJdC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,EAASO,GAAV,OAChB,cAAC,EAAD,CAAgBP,QAASA,GAAdO,UCLVC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCHG,G,wDAtCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,oBAG5C,WAAU,IAAD,OAGP,EAAiCE,KAAKR,MAA9BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YAEZQ,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAC9CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAKlD,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,mBACZC,aAPe,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAS3D,cAAC,EAAD,CAAUxB,SAAUkB,W,GAjCVO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68dbac31.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        \r\n        <h1>{props.monster.name}</h1>\r\n        <h2>{props.monster.email}</h2>\r\n\r\n    </div>\r\n)","import React from \"react\";\r\nimport {Card} from '../card/card.component'\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n        {props.monsters.map((monster, key) => (\r\n            <Card key={key} monster={monster} />\r\n        ))}\r\n    </div>\r\n)","import React from \"react\";\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className='search' \r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        onChange={handleChange} \r\n    />\r\n)\r\n\r\n","// test comment in app\r\nimport React, { Component } from 'react';\r\nimport {CardList} from './components/card-list/card-list.component'\r\nimport {SearchBox} from './components/search-box/search-box.component'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super() // calls constructor on Component\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(res => res.json())\r\n      .then(users => this.setState({monsters: users}))\r\n  }\r\n\r\n  render() {\r\n    \r\n    // the same as saying monsters = this.state.monsters and searchField = this.state.searchField\r\n    const { monsters, searchField} = this.state\r\n    \r\n    const filteredMonsters = monsters.filter(monster => \r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    )\r\n\r\n    const handleChange = e => this.setState({searchField: e.target.value})\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Monsters Rolodex</h1>\r\n        <SearchBox \r\n          placeholder='Search Monsters!'\r\n          handleChange={handleChange}\r\n        />\r\n        <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}